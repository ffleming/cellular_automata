#!/usr/bin/env ruby

require 'cellular_automata'
require 'optparse'

def opts_from_cli
  options = {}
  opt_parser = OptionParser.new do |opts|
    opts.program_name = File.basename(__FILE__)
    opts.banner = "#{opts.program_name} [options] RULE"
    opts.on('-w WIDTH', '--width WIDTH', 'Set width') { |w| options[:width] = w.to_i }
    opts.on('-h HEIGHT', '--height HEIGHT', 'Set height') { |h| options[:height] = h.to_i }
    opts.on('-r REFRESH', '--refresh REFRESH', 'Set refresh rate in seconds') { |r| options[:refresh] = r.to_f }
    opts.on('-v', '--version', 'Print version information') do
      puts "#{File.basename(__FILE__)} #{CellularAutomata::VERSION}"
      exit true
    end
    opts.on('--help', 'Display this screen') do
      puts opts
      exit true
    end
  end
  begin
    opt_parser.parse!
  rescue OptionParser::InvalidOption => e
    puts e.message
    exit false
  end
  options
end

opts = opts_from_cli
opts[:width]  ||= 120
opts[:height] ||= 30
opts[:refresh] ||= 0.1
rule = ARGV[0] || 'B3S2'
board = CellularAutomata::Board.new(width: opts[:width], height: opts[:height], rule: rule)

trap 'SIGINT' do
  exit
end

while true do
  puts "\e[H\e[2J"
  board.tick!
  puts board.to_s
  sleep opts[:refresh]
end
